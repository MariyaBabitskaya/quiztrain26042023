const modalBtns = [...document.getElementsByClassName('modal-button')]
тут короче полумаем массив из шаблона по классу
и распоковываем коллекцию
теперь можно обращаться к атрибутам каждого объекта квиза

const modalBody = document.getElementById('modal-body-confirm')
обращение к телу модального окна

modalBtns.forEach(modalBtn => modalBtn.addEventListener('click', () => {
    const pk = modalBtn.getAttribute('data-pk')
    // console.log(modalBtn)
    console.log(pk)
}))

здесь мы обрабатываем взаимодействие по нажатию на квиз
в данной проверке по клику в консоль получаем внешний ключ
то есть pk то есть айди теста
--------

Свойство innerHTML позволяет считать содержимое элемента в
виде HTML-строки или установить новый HTML.

Новое значение HTML необходимо передавать в виде строки и оно
заменит текущее содержимое элемента. При передаче невалидной
HTML-строки будет выброшена ошибка. HTML-строкой является строка,
которая содержит валидную HTML-разметку, в innerHTML нельзя передать
DOM-элемент.

КОРОЧЕ. Благодаря этой команте, мы когда работаем с динамическим
элементов, мы можем подставлять кусок хтмл в шаблон
Для этого здесь мы обратились к телу модального окна,
в цикле перебора квизов вызываем для него команду иннер,
итого когда нажимаем на тест, у нас прописывается текст в окне
а там подставлены переменные, то есть данные из БД по аттрибуту

-------

    startBtn.addEventListener('click', ()=>{
        console.log(window.location.href)

так мы проверяем работу действия клик в консоли пишется адрес

location — это объект хранящийся в window, который позволяет
получать информацию о текущем адресе страницы и менять его с
помощью функций или обновления полей объекта.

window.location.href
это получение текущего адреса страницы

window.location.href = url + pk
то есть мы к текущей странице то есть допустим главной
добавляем айди теста чтобы перейти к нему